# Import necessary libraries
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.linear_model import LinearRegression, LogisticRegression
from sklearn.model_selection import train_test_split
from sklearn.metrics import mean_squared_error, accuracy_score
import statsmodels.api as sm

# Load the dataset
df = pd.read_csv('Housing.csv')

# Display basic information
print(df.info())
print(df.describe())

# Check for missing values
print(df.isnull().sum())

# Scatter plot and correlation coefficient
sns.pairplot(df)
plt.show()

correlation_matrix = df.corr()
print(correlation_matrix)

# Simple Linear Regression
X = df[['Area']]
y = df['Price']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

lin_reg = LinearRegression()
lin_reg.fit(X_train, y_train)

y_pred = lin_reg.predict(X_test)
print(f'R-squared: {lin_reg.score(X_test, y_test)}')
print(f'Mean Squared Error: {mean_squared_error(y_test, y_pred)}')

# Multiple Linear Regression
X = df[['Area', 'Bedrooms', 'Bathrooms']]
y = df['Price']

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

lin_reg = LinearRegression()
lin_reg.fit(X_train, y_train)

y_pred = lin_reg.predict(X_test)
print(f'R-squared: {lin_reg.score(X_test, y_test)}')
print(f'Mean Squared Error: {mean_squared_error(y_test, y_pred)}')

# Logistic Regression (if applicable)
# Ensure 'PriceCategory' is a binary variable in your dataset
if 'PriceCategory' in df.columns:
    X = df[['Area', 'Bedrooms', 'Bathrooms']]
    y = df['PriceCategory']

    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

    log_reg = LogisticRegression()
    log_reg.fit(X_train, y_train)

    y_pred = log_reg.predict(X_test)
    print(f'Accuracy Score: {accuracy_score(y_test, y_pred)}')
else:
    print("The dataset does not contain a 'PriceCategory' column for logistic regression.")
